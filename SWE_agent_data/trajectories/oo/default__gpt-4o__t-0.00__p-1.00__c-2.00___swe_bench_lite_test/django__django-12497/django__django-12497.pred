{"model_name_or_path": "default__gpt-4o__t-0.00__p-1.00__c-2.00___swe_bench_lite_test", "instance_id": "django__django-12497", "model_patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\nindex 8ddbb5ba68..536b3dd601 100644\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -1309,7 +1309,7 @@ class ManyToManyField(RelatedField):\n                              \"through_fields keyword argument.\") % (self, from_model_name),\n                             hint=(\n                                 'If you want to create a recursive relationship, '\n-                                'use ForeignKey(\"%s\", symmetrical=False, through=\"%s\").'\n+                                'use ManyToManyField(\"%s\", through=\"%s\").'\n                             ) % (\n                                 RECURSIVE_RELATIONSHIP_CONSTANT,\n                                 relationship_model_name,\n@@ -1329,7 +1329,7 @@ class ManyToManyField(RelatedField):\n                             \"through_fields keyword argument.\" % (self, to_model_name),\n                             hint=(\n                                 'If you want to create a recursive relationship, '\n-                                'use ForeignKey(\"%s\", symmetrical=False, through=\"%s\").'\n+                                'use ManyToManyField(\"%s\", through=\"%s\").'\n                             ) % (\n                                 RECURSIVE_RELATIONSHIP_CONSTANT,\n                                 relationship_model_name,\ndiff --git a/tests/invalid_models_tests/test_relative_fields.py b/tests/invalid_models_tests/test_relative_fields.py\nindex 24f27168c2..e55d6cdef2 100644\n--- a/tests/invalid_models_tests/test_relative_fields.py\n+++ b/tests/invalid_models_tests/test_relative_fields.py\n@@ -1301,6 +1301,19 @@ class SelfReferentialFKClashTests(SimpleTestCase):\n             ),\n         ])\n \n+@isolate_apps('invalid_models_tests')\n+class RecursiveRelationshipHintTests(SimpleTestCase):\n+    def test_recursive_relationship_hint(self):\n+        class Model(models.Model):\n+            fk1 = models.ForeignKey('self', on_delete=models.CASCADE)\n+            fk2 = models.ForeignKey('self', on_delete=models.CASCADE)\n+\n+        errors = Model.check()\n+        self.assertTrue(any(\n+            error.id == 'fields.E334' and\n+            'use ManyToManyField(\"self\", through=' in error.hint\n+            for error in errors\n+        ))\n \n @isolate_apps('invalid_models_tests')\n class ComplexClashTests(SimpleTestCase):\n"}